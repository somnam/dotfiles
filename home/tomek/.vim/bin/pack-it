#!/bin/bash

pack="$HOME/.vim/pack/git-plugins"
pack_list="$HOME/.vim/plugins"
git=$(which git)

install ()
{
    # Check if urls file exists.
    [[ -f $pack_list ]] || return 0

    # Install all listed plugins.
    for subtype_and_url in $(cat "$pack_list"); do
        IFS=, read subtype url args <<< "$subtype_and_url"

        clone_dir=$(echo "$url" | sed -e 's/^.*\///' -e 's/\.git//')
        clone_path="$pack/$subtype/$clone_dir"
        [[ -d $clone_path ]] && continue

        echo "Cloning $url into $subtype/$clone_dir"
        $git clone "$args" "$url" "$clone_path"
        echo ""
    done
    echo "Plugins installed."
}

update ()
{
    # Update all installed plugins.
    for subtype in start opt; do
        for dir in $pack/$subtype/*; do
            [[ -d $dir/.git ]] || continue

            echo "Updating $dir"
            cd $dir
            $git stash; $git pull; $git stash pop;
            echo ""
        done
    done
    echo "Plugins updated."
}

save()
{
    # Clear current bundle list file.
    [[ -f $pack_list ]] && >| "$pack_list"

    # Update file with git repo urls.
    for subtype in start opt; do
        for dir in $pack/$subtype/*; do
            if [[ -d $dir/.git ]]; then
                cd $dir
                url=$($git url)
                echo "$subtype,$url" >> "$pack_list"
            fi
        done
    done
    echo "Plugins saved to file."
}

init()
{
    for dir in "backup" "swap" "sessions"; do
        dir_path="$HOME/.vim/$dir"
        if [[ ! -d $dir_path ]]; then
            mkdir $dir_path
            echo "Creating directory $dir_path"
        fi
    done

    for dir in "opt" "start"; do
        dir_path="$HOME/.vim/pack/git-plugins/$dir"
        if [[ ! -d $dir_path ]]; then
            mkdir -p $dir_path
            echo "Creating directory $dir_path"
        fi
    done

    echo "All directories created"
}

main ()
{
    [[ $git ]] || return 0;

    [[ -d $pack/start ]] || mkdir -p "$pack/start"
    [[ -d $pack/opt ]] || mkdir -p "$pack/opt"

    case "$1" in
        "") echo "Usage: ${0##*/} init|install|update|save"; exit;;
        "init") init; exit;;
        "install") install; exit;;
        "update") update; exit;;
        "save") save; exit;;
    esac
}

main $@
