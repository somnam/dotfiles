#!/usr/bin/env bash
set -e

nvim-bin ()
{
    local nvim=$(which nvim)
    echo "${nvim:-"$HOME/.local/bin/nvim"}"
}

upgrade-nvim ()
{
    [[ $(which curl) ]] || (echo "curl not installed" && exit 1)

    echo "Fetching appimage download url"
    local appimage_url=$(
        curl -s -o- https://api.github.com/repos/neovim/neovim/releases/latest \
            | grep "browser_download_url.*.appimage" \
            | head -n 1 \
            | sed -e "s/^.*\(http.*appimage\).*$/\1/"
    )

    if [[ -n $appimage_url ]]; then
        echo "Downloading latest nvim appimage"
        local bin_path="$HOME/.local/bin"
        local nvim_path="$bin_path/nvim"

        mkdir -p "$bin_path" && \
            curl -# -L "$appimage_url" -o "$nvim_path" && \
            chmod u+x "$nvim_path"
    else
        echo "AppImage download url not found"
    fi
}

update-python-requirements ()
{
    [[ $(which pyenv) ]] || (echo "pyenv not installed" && exit 1)

    local venv_path=$(pyenv prefix nvim)
    [[ -z "$venv_path" ]] && (echo "nvim virtualenv not created" && exit 1)

    local python_cmd="$venv_path/bin/python"
    local requirements="$HOME/.config/nvim/requirements.txt"
    if [[ -f "$python_cmd" && -f "$requirements" ]]; then
        echo "Updating python requirements"
        $python_cmd -mpip install -U setuptools pip wheel
        $python_cmd -mpip install -U -r "$requirements"
    else
        echo "Python requirements not updated"
    fi
}

main ()
{
    while getopts ":up" flag; do
        case "${flag}" in
            u)
                upgrade-nvim
                echo;;
            p)
                update-python-requirements
                echo;;
            *)
                echo "Usage: $0 [-s][-p]";;
        esac
    done
}

main $@
