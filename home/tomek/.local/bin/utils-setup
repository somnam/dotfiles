#!/usr/bin/env bash
set -e

upgrade-ripgrep ()
{
    [[ $(which curl) ]] || (echo "curl not installed" && exit 1)

    local archi=$(uname -sm)

    case "$archi" in
      "Darwin arm64") upgrade-ripgrep-darwin ;;
      "Linux x86_64") upgrade-ripgrep-linux ;;
      *) echo "unknown arch" && exit 1 ;;
    esac
}

upgrade-ripgrep-darwin ()
{
    local release_url="https://api.github.com/repos/microsoft/ripgrep-prebuilt/releases/latest"

    echo "Fetching ripgrep download url"
    local ripgrep_url=$(
        curl -s -o-  $release_url\
            | grep "browser_download_url.*aarch64-apple-darwin.tar.gz" \
            | head -n 1 \
            | sed -e "s/^.*\(http.*tar.gz\).*$/\1/"
    )

    if [[ -n $ripgrep_url ]]; then
        echo "Downloading latest ripgrep bin"
        local bin_path="$HOME/.local/bin"

        mkdir -p "$bin_path" && \
            curl -# -L -o- "$ripgrep_url" | tar -xz -C "$bin_path"
    else
        echo "ripgrep download url not found"
    fi
}

upgrade-ripgrep-linux ()
{
    echo "TODO"
}

upgrade-fzf()
{
    download-fzf

    local fzf_dir="$HOME/.fzf"
    local fzf_install="$fzf_dir/install"
    local fzf_install_opts="--bin"

    [[ -f $fzf_install ]] || exit

    $fzf_install "$fzf_install_opts"
}

download-fzf ()
{
    [[ $(which git) ]] || (echo "git not installed" && exit 1)

    echo "Downloading latest fzf source"
    local fzf_url="https://github.com/junegunn/fzf.git"
    local fzf_dir="$HOME/.fzf"
    local fzf_git_dir="$fzf_dir/.git"

    if [[ -d "$fzf_dir" ]]; then
        git --git-dir="$fzf_git_dir" --work-tree="$fzf_dir" pull
    else
        mkdir -p "$fzf_dir" && git clone --depth 1 "$fzf_url" "$fzf_dir"
    fi
}

main ()
{
    upgrade-fzf
    upgrade-ripgrep
}

main $@
