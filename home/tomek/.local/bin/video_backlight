#!/bin/sh

BACKLIGH_MAX=10

backlight_get_max_raw()
{
    cat /sys/class/backlight/intel_backlight/max_brightness
}

backlight_get_step()
{
    echo -n $(( $(backlight_get_max_raw) / ${BACKLIGH_MAX} ))
}

backlight_get()
{
    echo -n $(( $( cat /sys/class/backlight/intel_backlight/brightness ) / $( backlight_get_step )  ))
}

backlight_set()
{
    value="$1"
    if test -z "${value}" ; then
        echo "Invalid backlight value ${value}"
    fi

    pkexec /usr/sbin/xfpm-power-backlight-helper --set-brightness ${value}
}

backlight_change()
{
    change="$1"
    if test -z "${change}" ; then
        echo "Invalid backlight change ${change}."
        return 1
    fi

    case ${change} in
    [1234567890]|[[1234567890][[1234567890])
        value=$( expr ${change} + 0 )
        if test ${value} -lt 0 || test ${value} -gt ${BACKLIGH_MAX} ; then
            echo "Invalid backlight value ${value}."                  \
                "Should be a number between 0 .. ${BACKLIGH_MAX}" >&2
            return 1
        else
            value=$(( ${value} * $(backlight_get_step) ))
            backlight_set "${value}"
            return 0
        fi
        ;;
    *)
        echo "Invalid backlight change ${change}." >&2
        echo "Should be a number between"           \
            "1 .. ${BACKLIGH_MAX}" >&2
        return 1
        ;;
    esac
}

main()
{
    if test $# -eq 0 ; then
        current_brightness=$( backlight_get )
        notify-send -t 1200 "Video brightness is ${current_brightness}"
    else
        # Handle multiple backlight changes, e.g.:
        #   backlight.sh up up down down up
        for change in "$@" ; do
            backlight_change "${change}"
            if test $? -eq 0; then
                notify-send -t 1200 "Video brightness set to ${change}"
            fi
        done
    fi
}

main "$@"
